<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[聊聊希尔排序]]></title>
    <url>%2FPerkyRookie%2F8ae67b8f%2F</url>
    <content type="text"><![CDATA[&#x524D;&#x8A00; &#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x662F;Donald Shell&#x4E8E;1959&#x5E74;&#x63D0;&#x51FA;&#x6765;&#x7684;&#x4E00;&#x79CD;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x5B83;&#x662F;&#x7B2C;&#x4E00;&#x6279;&#x7A81;&#x7834;$O(n^2)$&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x7B97;&#x6CD5;&#x4E4B;&#x4E00;&#x3002;&#x5927;&#x8BDD;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5BF9;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x7684;&#x8BB2;&#x89E3;&#xFF0C;&#x6211;&#x770B;&#x5F97;&#x4E00;&#x77E5;&#x534A;&#x89E3;&#x7684;&#xFF0C;&#x4E4B;&#x540E;&#x7F51;&#x4E0A;&#x627E;&#x4E86;&#x4E0B;&#x8D44;&#x6599;&#xFF0C;&#x53D1;&#x73B0;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x5BF9;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x7684;&#x8BB2;&#x89E3;&#x975E;&#x5E38;&#x4E0D;&#x9519;&#xFF0C;&#x7279;&#x5728;&#x6B64;&#x6574;&#x7406;&#x4E00;&#x6CE2;&#x3002; &#x539F;&#x7406;&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x662F;&#x57FA;&#x4E8E;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x7684;&#x4EE5;&#x4E0B;&#x4E24;&#x70B9;&#x6027;&#x8D28;&#x800C;&#x63D0;&#x51FA;&#x6539;&#x8FDB;&#x65B9;&#x6CD5;&#x7684;&#xFF1A; &#x63D2;&#x5165;&#x6392;&#x5E8F;&#x5728;&#x5BF9;&#x51E0;&#x4E4E;&#x5DF2;&#x7ECF;&#x6392;&#x597D;&#x5E8F;&#x7684;&#x6570;&#x636E;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x6548;&#x7387;&#x9AD8;&#xFF0C;&#x5373;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x7EBF;&#x6027;&#x6392;&#x5E8F;&#x7684;&#x6548;&#x7387; &#x4F46;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x662F;&#x4F4E;&#x6548;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x6BCF;&#x6B21;&#x53EA;&#x80FD;&#x5C06;&#x6570;&#x636E;&#x79FB;&#x52A8;&#x4E00;&#x4F4D; &#x5148;&#x4E0A;&#x4E2A;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x7684;&#x52A8;&#x56FE;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x4F60;&#x4EEC;&#x770B;&#x4E0D;&#x770B;&#x5F97;&#x61C2;&#xFF0C;&#x53CD;&#x6B63;&#x6211;&#x4E0D;&#x662F;&#x5F88;&#x61C2;&#x2026;&#x2026; &#x8BF4;&#x8BF4;&#x6211;&#x7684;&#x4E2A;&#x4EBA;&#x7406;&#x89E3;&#xFF1A; &#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x7684;&#x5347;&#x7EA7;&#xFF0C;&#x539F;&#x7406;&#x5C31;&#x662F;&#x5148;&#x5C06;&#x6574;&#x4E2A;&#x5F85;&#x6392;&#x5E8F;&#x5217;&#x6309;&#x7167;&#x67D0;&#x4E2A;&#x589E;&#x91CF;&#xFF08;&#x4E5F;&#x79F0;&#x6B65;&#x957F;&#xFF09;&#x5206;&#x5272;&#x6210;&#x82E5;&#x5E72;&#x4E2A;&#x5B50;&#x5E8F;&#x5217;&#x5206;&#x522B;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x5408;&#x5E76;&#xFF0C;&#x4E4B;&#x540E;&#x4F9D;&#x6B21;&#x7F29;&#x5C0F;&#x589E;&#x91CF;&#x5927;&#x5C0F;&#x5728;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x5F53;&#x589E;&#x91CF;&#x8DB3;&#x591F;&#x5C0F;&#xFF08;&#x901A;&#x5E38;&#x4E3A;1&#xFF09;&#x65F6;&#xFF0C;&#x518D;&#x5BF9;&#x5168;&#x4F53;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#xFF0C;&#x800C;&#x6B64;&#x65F6;&#x9700;&#x6392;&#x5E8F;&#x7684;&#x6570;&#x636E;&#x51E0;&#x4E4E;&#x662F;&#x5DF2;&#x6392;&#x597D;&#x7684;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x8F83;&#x5FEB;&#x3002; &#x5F53;&#x7136;&#x5982;&#x679C;&#x4F60;&#x89C9;&#x5F97;&#x6587;&#x5B57;&#x6BD4;&#x8F83;&#x4E4F;&#x5473;&#x5C31;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x8FD9;&#x4E9B;&#x4F8B;&#x5B50;&#x5427; &#x4F8B;&#x5982;&#xFF0C;&#x5047;&#x8BBE;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x7EC4;&#x6570;[9 1 5 8 3 7 4 6 2]&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5148;&#x4EE5;&#x6B65;&#x957F;&#x4E3A;4&#x8FDB;&#x884C;&#x5206;&#x5272;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#xFF1A; 1239 1 5 83 7 4 6 2 &#x7136;&#x540E;&#x6211;&#x4EEC;&#x5BF9;&#x6BCF;&#x5217;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF08;&#x6CE8;&#x610F;&#x6BCF;&#x5217;&#x54E6;&#xFF09;&#xFF1A; 1232 1 4 63 7 5 89 &#x5C06;&#x4E0A;&#x8FF0;&#x56DB;&#x884C;&#x6570;&#x5B57;&#xFF0C;&#x4F9D;&#x5E8F;&#x5408;&#x5E76;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#xFF1A;[ 2 1 4 6 3 7 5 8 9 ]&#x3002;&#x6B64;&#x65F6;2&#x5DF2;&#x7ECF;&#x5F80;&#x524D;&#x79FB;&#xFF0C;&#x800C;8&#x3001;9&#x5DF2;&#x7ECF;&#x5728;&#x540E;&#x4E24;&#x4F4D;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4EE5;2&#x4E3A;&#x6B65;&#x957F;&#x8FDB;&#x884C;&#x5206;&#x5272;&#xFF1A; 123452 14 63 75 89 &#x7EE7;&#x7EED;&#x6392;&#x5E8F;&#xFF1A; 123452 13 64 75 89 &#x5408;&#x5E76;&#x5F97;&#x5230;&#xFF3B; 2 1 3 6 4 7 5 8 9&#xFF3D;&#xFF0C;&#x6B64;&#x65F6;&#x5E8F;&#x5217;&#x5DF2;&#x7ECF;&#x57FA;&#x672C;&#x6709;&#x5E8F;&#xFF0C;&#x9700;&#x4EA4;&#x6362;&#x6570;&#x636E;&#x7684;&#x60C5;&#x51B5;&#x5927;&#x4E3A;&#x51CF;&#x5C11;&#xFF0C;&#x8FD9;&#x65F6;&#x6574;&#x5217;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x6548;&#x7387;&#x5C31;&#x975E;&#x5E38;&#x9AD8;&#x3002; &#x6700;&#x7EC8;&#x5B8C;&#x6210;&#x6392;&#x5E8F;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6B65;&#x957F;&#x4E3A;1&#x65F6;&#xFF0C;&#x5F97;&#x5230;&#x6700;&#x7EC8;&#x5E8F;&#x5217;&#x4E3A;&#xFF1A;1 2 3 4 5 6 7 8 9&#x3002; &#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF08;C&#xFF09;12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;stdio.h&gt;#define MAXSIZE 100 //&#x7528;&#x4E8E;&#x8981;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x503C; typedef struct //&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x987A;&#x5E8F;&#x8868;&#x7ED3;&#x6784; { int r[MAXSIZE+1]; //&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x8981;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#xFF0C;r[0]&#x7528;&#x4F5C;&#x54E8;&#x5175;&#x6216;&#x8005;&#x4E34;&#x65F6;&#x53D8;&#x91CF; int length; //&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x987A;&#x5E8F;&#x8868;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6; }SqList;void ShellSort(SqList *L){ int i,j; int gap=L-&gt;length; //&#x83B7;&#x53D6;&#x6570;&#x7EC4;&#x957F;&#x5EA6; for(gap/=2;gap&gt;=1;gap/=2) //&#x6B65;&#x957F; for(i=gap+1; i&lt;=L-&gt;length; i++) //&#x4ECE;&#x7B2C;gap+1&#x4E2A;&#x5143;&#x7D20;&#x5F00;&#x59CB;&#xFF0C;&#x56E0;&#x4E3A;r[0]&#x88AB;&#x5F53;&#x505A;&#x4E34;&#x65F6;&#x53D8;&#x91CF; if(L-&gt;r[i] &lt; L-&gt;r[i-gap]) //&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E0E;&#x81EA;&#x5DF1;&#x7EC4;&#x5185;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F; { L-&gt;r[0]=L-&gt;r[i]; //&#x628A;&#x8981;&#x4EA4;&#x6362;&#x7684;&#x6570;&#x636E;&#x6682;&#x5B58;&#x7684;L-&gt;r[0]&#x4E2D; for(j=i-gap; j&gt;0&amp;&amp;L-&gt;r[j] &gt; L-&gt;r[0]; j-=gap) L-&gt;r[j+gap] = L-&gt;r[j]; //&#x8BB0;&#x5F55;&#x540E;&#x79FB;&#xFF0C;&#x67E5;&#x627E;&#x63D2;&#x5165;&#x4F4D;&#x7F6E; L-&gt;r[j+gap]=L-&gt;r[0]; //&#x63D2;&#x5165; }} int main(){ int i=0; int array[] = {39,80,76,41,13,29,50,78,30,11,100,7,41,86}; SqList L; L.length = sizeof(array)/sizeof(array[0]); //&#x83B7;&#x53D6;&#x6570;&#x7EC4;&#x957F;&#x5EA6; for(i=0;i&lt;L.length;i++) { L.r[i+1]=array[i]; //&#x628A;&#x6570;&#x7EC4;&#x5B58;&#x5165;&#x987A;&#x5E8F;&#x8868;&#x7ED3;&#x6784; } ShellSort(&amp;L); //&#x8F93;&#x51FA;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x6570;&#x7EC4; for(i=0;i&lt;L.length;i++) { printf(&quot;%d &quot;,L.r[i+1]); } return 0;} &#x53EF;&#x80FD;&#x6709;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#x7565;&#x96BE;&#x61C2;&#xFF0C;&#x8FD9;&#x91CC;&#x89E3;&#x91CA;&#x4E0B;&#xFF1A; &#x7B2C;15&#x884C;&#xFF1A;&#x8FD9;&#x91CC;&#x7684;&#x6B65;&#x957F;&#x91C7;&#x7528;$\frac {n} {2}$,&#x6700;&#x7EC8;&#x5224;&#x65AD;&#x6761;&#x4EF6;&#x4E3A;gap&gt;=1,&#x8FD9;&#x91CC;&#x4E0D;&#x7BA1;&#x4F60;&#x6570;&#x7EC4;&#x521D;&#x59CB;&#x957F;&#x5EA6;&#x4E3A;&#x591A;&#x5C11;&#xFF0C;&#x9664;&#x5230;&#x6700;&#x540E;&#x5747;&#x4F1A;&#x7B49;&#x4E8E;1&#xFF0C;&#x800C;&#x7B49;&#x4E8E;1&#x65F6;&#xFF0C;&#x5C31;&#x662F;&#x6267;&#x884C;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x5FAA;&#x73AF;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4E5F;&#x5C31;&#x662F;&#x6240;&#x6709;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x3002;&#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x5199;&#x6210;gap&gt;0&#x3002; &#x7B2C;16&#x884C;&#xFF1A;&#x5728;&#x524D;&#x9762;&#x5B9A;&#x4E49;&#x987A;&#x5E8F;&#x8868;&#x7ED3;&#x6784;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x52A0;&#x591A;&#x4E86;&#x4E00;&#x4F4D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x628A;r[0]&#x5F53;&#x505A;&#x4EA4;&#x6362;&#x6570;&#x636E;&#x65F6;&#x7684;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#x3002; &#x7B2C;20~23&#x884C;&#xFF1A;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;&#x5FAA;&#x73AF;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x62FF;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#x7684;&#x4E00;&#x5217;&#x8FDB;&#x884C;&#x8BB2;&#x89E3;&#xFF08;9 3 2&#xFF09;&#xFF1A; &#x5F53;$i=5$&#x65F6;&#xFF0C;9&#x548C;3&#x8FDB;&#x884C;&#x4E86;&#x4E00;&#x6B21;&#x4EA4;&#x6362;&#xFF0C;&#x53D8;&#x4E3A;&#xFF08;3 9 2&#xFF09;(&#x4F4D;&#x7F6E;&#x4E3A;1 5 9&#xFF09;&#xFF0C;&#x4E4B;&#x540E;&#x5728;$i=9$&#x65F6;$(&#x6B64;&#x65F6;r[0]=r[i]=2)$&#xFF0C;&#x505A;&#x51FA;&#x7684;&#x4EA4;&#x6362;&#x5982;&#x4E0A;&#x56FE;&#x6240;&#x793A;&#xFF08;&#x56FE;&#x7565;&#x5DEE;&#x2026;)&#xFF0C;&#x5206;&#x4E3A;&#x4E09;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A;$(gap=4)$ &#x7B2C;&#x4E00;&#x6B21;&#x8FDB;&#x5165;&#x5FAA;&#x73AF;$j=i-gap=5,r[j]=r[5]=9&gt;r[0]$&#xFF0C;&#x6267;&#x884C;23&#x884C;&#x5F97;$r[j+gap]=r[9]=r[j]=9$&#xFF0C;&#x6B64;&#x65F6;&#x8BE5;&#x5217;&#x6570;&#x503C;&#x53D8;&#x4E3A;(3 9 9)&#xFF1B; &#x7EE7;&#x7EED;&#x7B2C;&#x4E8C;&#x6B21;&#x5FAA;&#x73AF;$j=j-gap=1,r[j]=r[1]=3&gt;r[0]$&#xFF0C;&#x540C;&#x6837;&#x6267;&#x884C;&#x5FAA;&#x73AF;$r[j+gap]=r[5]=r[j]=3$&#xFF0C;&#x6B64;&#x65F6;&#x53D8;&#x4E3A;&#xFF08;3 3 9&#xFF09;&#xFF1B; &#x8DF3;&#x51FA;&#x5FAA;&#x73AF;(&#x6CE8;&#x610F;&#xFF1A;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x65F6;&#x591A;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x6B21;$j-=gap=-3&#x200B;$)&#xFF0C;&#x6267;&#x884C;$r[j+gap]=r[-3+4]=r[1]=r[0]=2&#x200B;$&#xFF0C;&#x6700;&#x7EC8;&#x53D8;&#x4E3A;(2 3 9)&#x3002; &#x6B65;&#x957F;&#xFF08;&#x589E;&#x91CF;&#xFF09;&#x9009;&#x62E9;&#x6B65;&#x957F;&#x7684;&#x9009;&#x53D6;&#x975E;&#x5E38;&#x5173;&#x952E;&#xFF0C;&#x4F46;&#x662F;&#x6B65;&#x957F;&#x7684;&#x9009;&#x62E9;&#x6CA1;&#x6709;&#x7EDF;&#x4E00;&#x89C4;&#x5B9A;&#xFF0C;&#x4E5F;&#x6CA1;&#x7EDD;&#x5BF9;&#x7684;&#x89C4;&#x5F8B;&#x3002;&#x53EA;&#x8981;&#x6EE1;&#x8DB3;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6B65;&#x957F;&#x4E3A;1&#x5373;&#x53EF;&#x3002;Donald Shell&#x6700;&#x521D;&#x5EFA;&#x8BAE;&#x6B65;&#x957F;&#x9009;&#x62E9;&#x4E3A;$\frac {n} {2}$,&#x867D;&#x7136;&#x8FD9;&#x6837;&#x53BB;&#x53EF;&#x4EE5;&#x6BD4;$O(n^2)$&#x7C7B;&#x7684;&#x7B97;&#x6CD5;&#x66F4;&#x597D;&#xFF0C;&#x4F46;&#x4ECD;&#x7136;&#x6709;&#x51CF;&#x5C11;&#x5E73;&#x5747;&#x65F6;&#x95F4;&#x548C;&#x6700;&#x5DEE;&#x65F6;&#x95F4;&#x7684;&#x4F59;&#x5730;&#x3002;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x7ED9;&#x51FA;&#x7684;&#x90E8;&#x5206;&#x6B65;&#x957F;&#x4E0E;&#x6700;&#x574F;&#x60C5;&#x51B5;&#x4E0B;&#x590D;&#x6742;&#x5EA6;&#x6709;&#xFF1A; &#x5DF2;&#x77E5;&#x7684;&#x6700;&#x597D;&#x6B65;&#x957F;&#x5E8F;&#x5217;&#x662F;&#x7531;Sedgewick&#x63D0;&#x51FA;&#x7684;(1, 5, 19, 41, 109,&#x2026;)&#xFF0C;&#x8BE5;&#x5E8F;&#x5217;&#x7684;&#x9879;&#x6765;&#x81EA;$9\times4^i-9\times2^i+1$&#x548C;$2^{i+2}\times(2^{i+2}-3)+1$&#x8FD9;&#x4E24;&#x4E2A;&#x7B97;&#x5F0F;&#x3002;&#x8FD9;&#x9879;&#x7814;&#x7A76;&#x4E5F;&#x8868;&#x660E;&#x201C;&#x6BD4;&#x8F83;&#x5728;&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x4E2D;&#x662F;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4EA4;&#x6362;&#x3002;&#x201D;&#x7528;&#x8FD9;&#x6837;&#x6B65;&#x957F;&#x5E8F;&#x5217;&#x7684;&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x6BD4;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x8981;&#x5FEB;&#xFF0C;&#x751A;&#x81F3;&#x5728;&#x5C0F;&#x6570;&#x7EC4;&#x4E2D;&#x6BD4;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x548C;&#x5806;&#x6392;&#x5E8F;&#xFF08;&#x540E;&#x7EED;&#x535A;&#x5BA2;&#x6574;&#x7406;&#xFF09;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x6D89;&#x53CA;&#x5927;&#x91CF;&#x6570;&#x636E;&#x65F6;&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x8FD8;&#x662F;&#x6BD4;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x6162;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <tags>
        <tag>C</tag>
        <tag>排序算法</tag>
      </tags>
  </entry>
</search>
