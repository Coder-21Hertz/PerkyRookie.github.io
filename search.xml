<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[数据结构：归并排序（非递归）]]></title>
    <url>%2FPerkyRookie%2F1fb40a9d%2F</url>
    <content type="text"><![CDATA[&#x524D;&#x8A00; &#x5F52;&#x5E76;&#x6392;&#x5E8F;&#xFF0C;&#x662F;&#x521B;&#x5EFA;&#x5728;&#x5F52;&#x5E76;&#x64CD;&#x4F5C;&#x4E0A;&#x7684;&#x4E00;&#x79CD;&#x6709;&#x6548;&#x7684;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x6548;&#x7387;&#x4E3A;$O(nlogn)$&#x3002;1945&#x5E74;&#x7531;&#x7EA6;&#x7FF0;&#xB7;&#x51AF;&#xB7;&#x8BFA;&#x4F0A;&#x66FC;&#x9996;&#x6B21;&#x63D0;&#x51FA;&#x3002;&#x8BE5;&#x7B97;&#x6CD5;&#x662F;&#x91C7;&#x7528;&#x5206;&#x6CBB;&#x6CD5;&#x7684;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5178;&#x578B;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x4E14;&#x5404;&#x5C42;&#x5206;&#x6CBB;&#x9012;&#x5F52;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#x3002;(&#x5F15;&#x81EA;&#x7EF4;&#x57FA;&#x767E;&#x79D1;) &#x539F;&#x7406;(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","video":{"url":"http://pkjg6xpfm.bkt.clouddn.com/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F_2.mp4","pic":"http://pjs07lvwy.bkt.clouddn.com/归并排序.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() &#x4EE5;&#x4E0A;&#x89C6;&#x9891;&#x8F6C;&#x81EA;https://www.youtube.com/watch?v=JSceec-wEyw &#x7528;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#x7B80;&#x5355;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x8FD9;&#x6837; &#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF08;&#x975E;&#x9012;&#x5F52;&#xFF09;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define MAXSIZE 100 //&#x7528;&#x4E8E;&#x8981;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x503C; typedef struct //&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x987A;&#x5E8F;&#x8868;&#x7ED3;&#x6784; { int r[MAXSIZE+1]; //&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x8981;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#xFF0C;r[0]&#x7528;&#x4F5C;&#x54E8;&#x5175;&#x6216;&#x8005;&#x4E34;&#x65F6;&#x53D8;&#x91CF; int length; //&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x987A;&#x5E8F;&#x8868;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6; }SqList;void Merge(int *S, int *T, int low, int m, int high);void MergePass(int *S, int *T, int s, int length);void MergeSort(SqList *L);int main(){ int i; int array[] = {39,80,76,41,13,29,50,78,30,11,100,7,41,86}; SqList L; L.length = sizeof(array)/sizeof(array[0]); //&#x83B7;&#x53D6;&#x6570;&#x7EC4;&#x957F;&#x5EA6; for(i=0;i&lt;L.length;i++) L.r[i+1]=array[i]; //&#x628A;&#x6570;&#x7EC4;&#x5B58;&#x5165;&#x987A;&#x5E8F;&#x8868;&#x7ED3;&#x6784; MergeSort(&amp;L); for(i=0;i&lt;L.length;i++) //&#x8F93;&#x51FA;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x6570;&#x7EC4; printf(&quot;%d &quot;,L.r[i+1]); return 0;}void MergeSort(SqList *L){ //&#x7533;&#x8BF7;&#x989D;&#x5916;&#x7684;&#x7A7A;&#x95F4;&#xFF0C;&#x7531;&#x4E8E;r[0]&#x4E3A;&#x54E8;&#x5175;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x957F;&#x5EA6;&#x8981;+1 int* TR = (int *)malloc((L-&gt;length+1)*sizeof(int)); int k = 1;/*k&#x7528;&#x6765;&#x8868;&#x793A;&#x6BCF;&#x6B21;k&#x4E2A;&#x5143;&#x7D20;&#x5F52;&#x5E76;*/ while (k &lt; L-&gt;length) { //k&#x6BCF;&#x6B21;&#x4E58;&#x4EE5;2&#x662F;&#x9075;&#x5FAA;1-&gt;2-&gt;4-&gt;8-&gt;16...&#x7684;&#x4E8C;&#x8DEF;&#x5F52;&#x5E76;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x7684;&#x539F;&#x5219; MergePass(L-&gt;r, TR, k, L-&gt;length);/*&#x5148;&#x501F;&#x52A9;&#x8F85;&#x52A9;&#x7A7A;&#x95F4;&#x5F52;&#x5E76;*/ k *= 2; MergePass(TR, L-&gt;r, k, L-&gt;length);/*&#x518D;&#x4ECE;&#x8F85;&#x52A9;&#x7A7A;&#x95F4;&#x5C06;&#x6392;&#x8FC7;&#x5E8F;&#x7684;&#x5E8F;&#x5217;&#x5F52;&#x5E76;&#x56DE;&#x539F;&#x6570;&#x7EC4;*/ k *= 2; } free(TR);//&#x91CA;&#x653E;&#x5185;&#x5B58; TR=NULL;}//&#x5C06;S&#x4E2D;&#x76F8;&#x90BB;&#x957F;&#x5EA6;&#x4E3A;s&#x7684;&#x5B50;&#x7CFB;&#x5217;&#x4E24;&#x4E24;&#x5F52;&#x5E76;&#x5230;T&#x4E2D;//&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7A0D;&#x5FAE;&#x96BE;&#x7406;&#x89E3;&#x70B9;&#xFF0C;&#x6587;&#x7AE0;&#x540E;&#x9762;&#x4F1A;&#x5206;&#x6790;&#x4E0B;void MergePass(int *S, int *T, int s, int length){ int i = 1; //r[0]&#x7528;&#x4F5C;&#x54E8;&#x5175;&#x6216;&#x8005;&#x4E34;&#x65F6;&#x53D8;&#x91CF; int j; while (i &lt;= length-2*s+1) //length-i+1(&#x672A;&#x5408;&#x5E76;&#x5143;&#x7D20;) &gt;= 2s { Merge(S, T, i, i+s-1, i+2*s-1); i= i+2*s; //&#x81EA;&#x589E;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x8D77;&#x59CB;&#x70B9; } if (i&lt; length-s+1) //&#x5F52;&#x5E76;&#x6700;&#x540E;&#x4E24;&#x4E2A;&#x5E8F;&#x5217; Merge(S, T, i, i+s-1, length); else for (j = i; j &lt;= length; j++) T[j] = S[j];}//&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x6700;&#x4E3B;&#x8981;&#x5B9E;&#x73B0;&#x51FD;&#x6570;//&#x5C06;&#x6709;&#x5E8F;&#x7684;S[low..m]&#x548C;S[m+1..high]&#x5F52;&#x5E76;&#x5230;&#x6709;&#x5E8F;&#x7684;T[low..high]&#x4E2D;void Merge(int *S, int *T, int low, int m, int high){//j&#x5728;[m+1,high]&#x533A;&#x95F4;&#x9012;&#x589E;&#xFF0C;k&#x7528;&#x4E8E;&#x76EE;&#x6807;T&#x7684;&#x4E0B;&#x6807;&#x9012;&#x589E;, l&#x662F;&#x8F85;&#x52A9;&#x53D8;&#x91CF; int j, k, l; for (k = low,j = m+1; low &lt;= m &amp;&amp; j &lt;= high; k++) //&#x5C06;S&#x4E2D;&#x7684;&#x5143;&#x7D20;&#x7531;&#x5C0F;&#x5230;&#x5927;&#x5F52;&#x5E76;&#x5230;T&#x4E2D; { if (S[low] &lt; S[j]) T[k] = S[low++]; //&#x6B64;&#x5904;&#x5148;&#x6267;&#x884C;T[k] = S[low],&#x7136;&#x540E;low++; else T[k] = S[j++]; //&#x540C;&#x7406; } //for&#x5FAA;&#x73AF;&#x8FC7;&#x540E;&#xFF0C;&#x53EF;&#x80FD;&#x6709;j&gt;high &#x6216;&#x8005; low&gt;m&#xFF0C;&#x6545;&#x5206;&#x60C5;&#x51B5;&#x5904;&#x7406; if (low &lt;= m) { for (l = 0; l &lt;= m-low; l++) T[k+l] = S[low+l]; //&#x5C06;&#x5269;&#x4F59;&#x7684;S[low..m]&#x590D;&#x5236;&#x5230;T&#x4E2D; } if (j &lt;= high) { for (l = 0; l &lt;= high-j; l++) T[k+l] = S[j+l]; //&#x5C06;&#x5269;&#x4F59;&#x7684;S[j..high]&#x590D;&#x5236;&#x5230;T&#x4E2D; }} &#x8FD9;&#x91CC;&#x5BF9;&#x90E8;&#x5206;&#x96BE;&#x4EE5;&#x7406;&#x89E3;&#x7684;&#x4EE3;&#x7801;&#x505A;&#x4E2A;&#x8BE6;&#x7EC6;&#x5206;&#x6790;&#xFF1A; 123456789101112131415void MergePass(int *S, int *T, int s, int length){ int i = 1; //r[0]&#x7528;&#x4F5C;&#x54E8;&#x5175;&#x6216;&#x8005;&#x4E34;&#x65F6;&#x53D8;&#x91CF; int j; while (i &lt;= length-2*s+1) //length-i+1(&#x672A;&#x5408;&#x5E76;&#x5143;&#x7D20;) &gt;= 2s { Merge(S, T, i, i+s-1, i+2*s-1); i= i+2*s; //&#x81EA;&#x589E;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x8D77;&#x59CB;&#x70B9; } if (i&lt; length-s+1) //&#x5F52;&#x5E76;&#x6700;&#x540E;&#x4E24;&#x4E2A;&#x5E8F;&#x5217; Merge(S, T, i, i+s-1, length); else for (j = i; j &lt;= length; j++) T[j] = S[j];} &#x7B2C;5~9&#x884C;&#xFF1A;&#x8FD9;&#x91CC;&#x5B9E;&#x73B0;&#x7684;&#x662F;&#x5B50;&#x5E8F;&#x5217;&#x7684;&#x4E24;&#x4E24;&#x5F52;&#x5E76;&#x3002; &#x5224;&#x65AD;&#x6761;&#x4EF6;i &lt;= length-2*s+1&#x53EF;&#x4EE5;&#x770B;&#x505A;length-i+1 &gt;= 2s&#xFF0C;&#x8868;&#x793A;&#x672A;&#x5408;&#x5E76;&#x7684;&#x5143;&#x7D20;&#x5C0F;&#x4E8E;2s&#x65F6;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#xFF0C;&#x5373;&#x4E0D;&#x8DB3;&#x4EE5;&#x6784;&#x6210;&#x4E24;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;s&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x65F6;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#xFF1B; &#x672A;&#x5408;&#x5E76;&#x5143;&#x7D20;&#x9700;&#x8981;+1&#x7684;&#x539F;&#x56E0;&#x53EF;&#x4EE5;&#x7528;&#x4E2A;&#x4F8B;&#x5B50;&#x89E3;&#x91CA;&#xFF1A;&#x5373;&#x7B2C;&#x4E00;&#x6B21;&#x8FDB;&#x5165;&#x5FAA;&#x73AF;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x6709;length&#x4E2A;&#x5143;&#x7D20;&#x672A;&#x5408;&#x5E76;&#xFF0C;&#x800C;i&#x8D77;&#x59CB;&#x5927;&#x5C0F;&#x662F;1&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x8981;+1&#x3002; &#x7B2C;7&#x884C;&#xFF1A;&#x4F20;&#x5165;&#x5143;&#x7D20;-1&#x662F;&#x56E0;&#x4E3A;i+s&#x548C;i+2s&#x90FD;&#x662F;&#x4E0B;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#xFF0C;&#x6240;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#x7684;&#x7EC8;&#x70B9;&#x5C31;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x503C;-1&#x3002; &#x7B2C;10~14&#x884C;&#xFF1A;&#x5224;&#x65AD;&#x6761;&#x4EF6;i&lt; length-s+1&#x4E00;&#x6837;&#x53EF;&#x4EE5;&#x770B;&#x505A;length-i+1&gt;s &#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF1A;&#x672A;&#x5408;&#x5E76;&#x7684;&#x5143;&#x7D20;&#x957F;&#x5EA6;&#x5927;&#x4E8E;s&#xFF0C;&#x8868;&#x793A;&#x8FD8;&#x80FD;&#x6784;&#x6210;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A;s&#x7684;&#x5E8F;&#x5217;&#x548C;&#x4E00;&#x4E2A;&#x5C0F;&#x4E8E;s&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x5373;&#x6700;&#x540E;&#x4E24;&#x4E2A;&#x5E8F;&#x5217;&#xFF0C;&#x8FD9;&#x65F6;&#x8FD8;&#x8981;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x5F52;&#x5E76;&#x3002; else&#xFF1A;&#x672A;&#x5408;&#x5E76;&#x7684;&#x5143;&#x7D20;&#x957F;&#x5EA6;&#x5C0F;&#x4E8E;s&#xFF0C;&#x5219;&#x53EA;&#x5269;&#x4E00;&#x4E2A;&#x5E8F;&#x5217;&#xFF0C;&#x8FD9;&#x65F6;&#x65E0;&#x6CD5;&#x5F52;&#x5E76;&#xFF0C;&#x76F4;&#x63A5;&#x628A;&#x5143;&#x7D20;&#x52A0;&#x5230;T&#x6570;&#x7EC4;&#x540E;&#x7AEF;&#x3002; &#x5269;&#x4E0B;&#x7684;&#x5E94;&#x8BE5;&#x4E0D;&#x96BE;&#x7406;&#x89E3;&#x4E86;&#x5427;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <tags>
        <tag>C</tag>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给ROCK64安装OpenCV3]]></title>
    <url>%2FPerkyRookie%2F9ddb80a1%2F</url>
    <content type="text"><![CDATA[&#x5199;&#x5728;&#x524D;&#x9762; &#x4E4B;&#x524D;&#x5728;&#x505A;&#x9879;&#x76EE;&#x65F6;&#x63A5;&#x89E6;&#x4E86;&#x8FD9;&#x5757;&#x677F;&#xFF0C;&#x9009;&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x539F;&#x56E0;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x6709;&#x4E00;&#x4E2A;USB3.0&#x7684;&#x63A5;&#x53E3;&#xFF08;&#x6811;&#x8393;&#x6D3E;&#x53EA;&#x6709;2.0&#xFF09;&#xFF0C;&#x5E76;&#x4E14;&#x6709;&#x548C;&#x6811;&#x8393;&#x6D3E;&#x5DEE;&#x4E0D;&#x591A;&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x5757;&#x677F;&#x8FD8;&#x662F;&#x6709;&#x5F88;&#x591A;&#x7F3A;&#x70B9;&#xFF0C;&#x4F8B;&#x5982;&#x521A;&#x51FA;&#x4E0D;&#x4E45;&#xFF0C;&#x8D44;&#x6599;&#x5F88;&#x5C11;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x56FD;&#x5185;&#x7684;&#x8D44;&#x6599;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#xFF0C;&#x800C;&#x4E14;&#x7CFB;&#x7EDF;&#x4E5F;&#x4E0D;&#x662F;&#x5F88;&#x5B8C;&#x5584;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x88C5;OpenCV3&#x65F6;&#x9047;&#x5230;&#x4E86;&#x5F88;&#x591A;&#x574E;&#xFF0C;&#x88C5;&#x4E86;&#x6211;&#x56DB;&#x4E94;&#x5929;&#x624D;&#x88C5;&#x597D;&#xFF0C;&#x4E4B;&#x540E;&#x5462;&#xFF0C;&#x4E5F;&#x5728;CSDN&#x505A;&#x4E86;&#x4E2A;&#x6559;&#x7A0B;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2;&#x4E86;&#xFF0C;&#x5C31;&#x628A;&#x5B83;&#x8FC1;&#x79FB;&#x8FC7;&#x6765;&#x3002; &#x8BF4;&#x660E;ROCK64&#x914D;&#x7F6E;&#x4EC0;&#x4E48;&#x7684;&#x5C31;&#x4E0D;&#x591A;&#x8BF4;&#x4E86;&#xFF0C;&#x7CFB;&#x7EDF;&#x91C7;&#x7528;&#x7684;&#x662F;&#x5B98;&#x65B9;&#x7684;Debian&#x7CFB;&#x7EDF;&#xFF0C;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x53C2;&#x8003;&#x4E86;Satya Mallick&#x7684;&#x6559;&#x7A0B;&#xFF0C;&#x94FE;&#x63A5;&#x4E3A;&#xFF1A;https://www.learnopencv.com/install-opencv3-on-ubuntu/#comments &#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x73B0;&#x5728;&#x5F00;&#x59CB;&#x5427;&#xFF01; &#x7B2C;&#x4E00;&#x6B65;&#xFF1A;&#x66F4;&#x65B0;&#x5305;12sudo apt-get updatesudo apt-get upgrade &#x8FD9;&#x4E00;&#x6B65;&#x6267;&#x884C;&#x540E;&#x4F1A;&#x7F3A;&#x5C11;&#x5F88;&#x591A;&#x4F9D;&#x8D56;&#x9879;&#xFF0C;&#x5F88;&#x591A;&#x6CA1;&#x66F4;&#x65B0;&#xFF0C;&#x6CA1;&#x5B89;&#x88C5;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E0D;&#x6025;&#xFF0C;&#x5148;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x4E00;&#x6B65;&#x3002; &#x7B2C;2&#x6B65;&#xFF1A;&#x5B89;&#x88C5;OS&#x5E93;&#x6CE8;&#x610F;&#x4E0B;&#x9762;&#x51E0;&#x90E8;&#x597D;&#x51E0;&#x4E2A;&#x53EF;&#x80FD;&#x90FD;&#x4F1A;&#x4E0D;&#x6210;&#x529F;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x4E0D;&#x80FD;&#x8DF3;&#x8FC7; &#x5B89;&#x88C5;&#x5931;&#x8D25;&#x7684;&#x5C31;&#x5230;&#x8FD9;&#x4E2A;&#x94FE;&#x63A5;&#x4E0B;&#x8F7D;&#xFF1A;https://www.debian.org/distrib/packages&#xFF08;&#x53F3;&#x4E0A;&#x89D2;&#x641C;&#x7D22;&#xFF09;&#xFF0C;&#x4E00;&#x822C;&#x4E0B;&#x8F7D;&#x7A33;&#x5B9A;&#x7248;&#xFF0C;&#x5373;stretch(stable)&#x7248;&#xFF0C;&#x5F53;&#x7136;&#x6CA1;&#x6709;&#x5C31;&#x4E0B;&#x8F7D;&#x5176;&#x4ED6;&#x7684;&#xFF0C;&#x786C;&#x4EF6;&#x67B6;&#x6784;&#x4E00;&#x5B9A;&#x8981;arm64&#xFF0C;&#x522B;&#x9009;&#x6210;amd&#x4E86;&#xFF0C;&#x4E0B;&#x8F7D;&#x540E;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#x5230;&#x4FDD;&#x5B58;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x5B89;&#x88C5;deb&#x5305;(sudo dpkg -i xxx.deb)&#x3002; 1234567891011121314151617181920212223242526# &#x5220;&#x9664;&#x4EE5;&#x524D;&#x5B89;&#x88C5;&#x7684;x264sudo apt-get remove x264 libx264-dev# &#x7136;&#x540E;&#x5F00;&#x59CB;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;&#x9879;sudo apt-get install build-essential checkinstall cmake pkg-config yasmsudo apt-get install git gfortransudo apt-get install libjpeg8-dev libjasper-dev libpng12-dev # &#x5982;&#x679C;&#x4F60;&#x7684;&#x7CFB;&#x7EDF;&#x662F; Ubuntu 14.04sudo apt-get install libtiff4-dev# &#x5982;&#x679C;&#x4F60;&#x7684;&#x7CFB;&#x7EDF;&#x662F; Ubuntu 16.04sudo apt-get install libtiff5-dev sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-devsudo apt-get install libxine2-dev libv4l-devsudo apt-get install libgstreamer0.10-dev libgstreamer-plugins-base0.10-devsudo apt-get install qt5-default libgtk2.0-dev libtbb-devsudo apt-get install libatlas-base-devsudo apt-get install libfaac-dev libmp3lame-dev libtheora-devsudo apt-get install libvorbis-dev libxvidcore-devsudo apt-get install libopencore-amrnb-dev libopencore-amrwb-devsudo apt-get install x264 v4l-utils # &#x53EF;&#x9009;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#xFF08;&#x6700;&#x597D;&#x5B89;&#x88C5;&#xFF0C;&#x514D;&#x5F97;&#x540E;&#x9762;&#x7F3A;&#x5C11;&#xFF09;sudo apt-get install libprotobuf-dev protobuf-compilersudo apt-get install libgoogle-glog-dev libgflags-devsudo apt-get install libgphoto2-dev libeigen3-dev libhdf5-dev doxygen &#x5B89;&#x88C5;&#x5B8C;&#x540E;&#x5728;&#x91CD;&#x65B0;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x66F4;&#x65B0;&#x5305;&#x547D;&#x4EE4;&#xFF0C;&#x770B;&#x8FD8;&#x7F3A;&#x5C11;&#x4EC0;&#x4E48; 12sudo apt-get updatesudo apt-get upgrade &#x7F3A;&#x7684;&#x5C31;&#x53BB;&#x4E0A;&#x9762;&#x7684;&#x90A3;&#x4E2A;&#x94FE;&#x63A5;&#x627E;&#xFF0C;&#x8FDB;&#x884C;&#x624B;&#x52A8;&#x5B89;&#x88C5;&#x3002;&#x4E0D;&#x8FC7;&#x6709;&#x4E24;&#x4E2A;&#x4F1A;&#x641C;&#x4E0D;&#x5230;&#xFF0C;linux-rock64&#x548C;linux-rock64-package&#xFF0C;&#x8FD9;&#x4E2A;&#x5E94;&#x8BE5;&#x662F;&#x5B98;&#x65B9;&#x56FA;&#x4EF6;&#x5E93;&#x7684;&#x5347;&#x7EA7;&#x5305;&#x7684;&#xFF0C;&#x535A;&#x4E3B;&#x5B89;&#x88C5;&#x8FD9;&#x4E24;&#x4E2A;&#x4E4B;&#x540E;&#x53D1;&#x73B0;&#x663E;&#x793A;&#x5C4F;&#x65E0;&#x6CD5;&#x663E;&#x793A;&#xFF08;&#x5177;&#x4F53;&#x4E0D;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x539F;&#x56E0;&#xFF0C;&#x6709;&#x77E5;&#x9053;&#x7684;&#x53EF;&#x4EE5;&#x8BF4;&#x4E0B;&#xFF09;&#xFF0C;&#x4F46;&#x80FD;&#x5F00;&#x673A;&#xFF08;&#x5373;&#x80FD;&#x8FDC;&#x7A0B;&#x64CD;&#x63A7;&#xFF09;&#xFF0C;&#x535A;&#x4E3B;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x663E;&#x793A;&#x5C4F;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x6CA1;&#x88C5;&#xFF0C;&#x8FD9;&#x4E2A;&#x770B;&#x4E2A;&#x4EBA;&#x9700;&#x8981;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x7528;&#x663E;&#x793A;&#x5C4F;&#x5C31;&#x88C5;&#xFF0C;&#x94FE;&#x63A5;&#x4E3A;https://github.com/ayufan-rock64/linux-build/releases/tag/0.6.44&#x3002; &#x4E5F;&#x53EF;&#x76F4;&#x63A5;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x4E24;&#x6B65;&#x8FDB;&#x884C;&#x81EA;&#x52A8;&#x5B89;&#x88C5; 12sudo apt-get update -ysudo apt-get install linux-rock64 -y &#x7B2C;3&#x6B65;&#xFF1A;&#x5B89;&#x88C5;Python&#x5E93;1234# &#x53EF;&#x9009;&#x5B89;&#x88C5;&#xFF0C;&#x5982;&#x679C;&#x53EA;&#x8981;python3&#x5C31;&#x53BB;&#x6389;python-pipsudo apt-get install python-dev python-pip python3-dev python3-pipsudo -H pip2 install -U pip numpysudo -H pip3 install -U pip numpy 123456# &#x5B89;&#x88C5;&#x865A;&#x62DF;&#x73AF;&#x5883;&#xFF0C;&#x5C06;&#x9879;&#x76EE;&#x73AF;&#x5883;&#x548C;&#x5168;&#x5C40;&#x73AF;&#x5883;&#x5206;&#x5F00;&#xFF0C;&#x8FD9;&#x901A;&#x5E38;&#x662F;&#x4E00;&#x79CD;&#x5F88;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x3002;sudo pip2 install virtualenv virtualenvwrappersudo pip3 install virtualenv virtualenvwrapperecho &quot;# Virtual Environment Wrapper&quot; &gt;&gt; ~/.bashrcecho &quot;source /usr/local/bin/virtualenvwrapper.sh&quot; &gt;&gt; ~/.bashrcsource ~/.bashrc 1234567891011121314151617181920# &#x53EF;&#x9009;&#xFF0C;&#x53EF;&#x4E24;&#x4E2A;&#x90FD;&#x88C5;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x865A;&#x62DF;&#x73AF;&#x5883;############ Python 2 ############# &#x521B;&#x5EFA;&#x865A;&#x62DF;&#x73AF;&#x5883;mkvirtualenv facecourse-py2 -p python2workon facecourse-py2# &#x5728;&#x865A;&#x62DF;&#x73AF;&#x5883;&#x4E2D;&#x5B89;&#x88C5;python&#x5E93;pip install numpy scipy matplotlib scikit-image scikit-learn ipython# &#x9000;&#x51FA;&#x865A;&#x62DF;&#x73AF;&#x5883;deactivate################################################## Python 3 ############# &#x521B;&#x5EFA;&#x865A;&#x62DF;&#x73AF;&#x5883;mkvirtualenv facecourse-py3 -p python3workon facecourse-py3 # &#x5728;&#x865A;&#x62DF;&#x73AF;&#x5883;&#x4E2D;&#x5B89;&#x88C5;python&#x5E93;pip install numpy scipy matplotlib scikit-image scikit-learn ipython# &#x9000;&#x51FA;&#x865A;&#x62DF;&#x73AF;&#x5883;deactivate###################################### &#x7B2C;4&#x6B65;&#xFF1A;&#x4E0B;&#x8F7D;OpenCV&#x548C;OpenCV_contrib&#x8FD9;&#x4E24;&#x90E8;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x9519;&#xFF08;&#x56FD;&#x5185;&#x53EF;&#x80FD;&#x88AB;&#x5899;&#xFF09;&#xFF0C;&#x591A;&#x8BD5;&#x51E0;&#x6B21;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6D4F;&#x89C8;&#x5668;&#x4E0B;&#x8F7D;&#xFF0C;&#x4E0D;&#x8FC7;&#x8981;&#x6CE8;&#x610F;&#x7248;&#x672C;&#x53F7; &#x6B65;&#x9AA4;4.1&#xFF1A;&#x4ECE;Github&#x4E0B;&#x8F7D;opencv1234git clone https://github.com/opencv/opencv.gitcd opencv git checkout 3.3.1 # &#x6CE8;&#x610F;&#x8FD9;&#x4E2A;&#x8981;&#x548C;&#x4E0B;&#x9762;&#x7684;&#x7248;&#x672C;&#x4E00;&#x81F4;cd .. &#x6B65;&#x9AA4;4.2&#xFF1A;&#x4ECE;Github&#x4E0B;&#x8F7D;opencv_contrib1234git clone https://github.com/opencv/opencv_contrib.gitcd opencv_contribgit checkout 3.3.1cd .. &#x7B2C;&#x4E94;&#x6B65;&#xFF1A;&#x4F7F;&#x7528;contrib&#x6A21;&#x5757;&#x7F16;&#x8BD1;&#x5E76;&#x5B89;&#x88C5;OpenCV&#x6B65;&#x9AA4;5.1&#xFF1A;&#x521B;&#x5EFA;&#x6784;&#x5EFA;&#x76EE;&#x5F55;123cd opencvmkdir buildcd build &#x6B65;&#x9AA4;5.2&#xFF1A;&#x8FD0;&#x884C;CMake1234567891011# &#x6CE8;&#x610F;&#x7B2C;&#x5341;&#x884C;&#x7684;&#x76EE;&#x5F55;&#x8981;&#x5BF9;cmake -D CMAKE_BUILD_TYPE=RELEASE \ -D CMAKE_INSTALL_PREFIX=/usr/local \ -D INSTALL_C_EXAMPLES=ON \ -D INSTALL_PYTHON_EXAMPLES=ON \ -D WITH_TBB=ON \ -D WITH_V4L=ON \ -D WITH_QT=ON \ -D WITH_OPENGL=ON \ -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \ -D BUILD_EXAMPLES=ON .. &#x6B65;&#x9AA4;5.3&#xFF1A;&#x7F16;&#x8BD1;&#x5E76;&#x5B89;&#x88C5;1234567# &#x786E;&#x5B9A;&#x673A;&#x5668;&#x4E2D;&#x7684;CPU&#x6838;&#x5FC3;&#x6570;&#x91CF;&#xFF0C;&#x8F93;&#x51FA;&#x51E0;&#x4EE3;&#x8868;&#x51E0;&#x4E2A;&#x6838;&#x5FC3;nproc# &#x7528;nproc&#x7684;&#x8F93;&#x51FA;&#x66FF;&#x6362;&#x4E0B;&#x9762;&#x7684;4make -j4sudo make installsudo sh -c &apos;echo &quot;/usr/local/lib&quot; &gt;&gt; /etc/ld.so.conf.d/opencv.conf&apos;sudo ldconfig &#x5982;&#x679C;&#x7F16;&#x8BD1;&#x6210;&#x529F;&#x663E;&#x793A; &#x4E00;&#x5B9A;&#x8981;&#x6210;&#x529F;&#x624D;&#x80FD;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x4E0D;&#x6210;&#x529F;&#x5C31;&#x5F97;&#x627E;&#x95EE;&#x9898;&#xFF0C;&#x770B;&#x4F1A;&#x4E0D;&#x4F1A;&#x6F0F;&#x4E86;&#x54EA;&#x4E00;&#x6B65;&#xFF0C;&#x6309;&#x7167;&#x4E0A;&#x9762;&#x6B65;&#x9AA4;&#x4E00;&#x822C;&#x4E0D;&#x4F1A;&#x5931;&#x8D25; ### &#x6B65;&#x9AA4;5.4&#xFF1A;&#x5728;&#x865A;&#x62DF;&#x73AF;&#x5883;&#x4E2D;&#x521B;&#x5EFA;&#x7B26;&#x53F7;&#x94FE;&#x63A5; &#x6839;&#x636E;&#x60A8;&#x7684;Python&#x7248;&#x672C;&#xFF0C;&#x8DEF;&#x5F84;&#x4F1A;&#x6709;&#x6240;&#x4E0D;&#x540C;&#x3002;OpenCV&#x7684;Python&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#xFF08;cv2.so&#xFF09;&#x53EF;&#x80FD;&#x5B89;&#x88C5;&#x5728;&#x76EE;&#x5F55;site-packages&#x6216;dist-packages&#x4E2D;&#x3002;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x67E5;&#x627E;&#x5176;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x4E0A;&#x7684;&#x6B63;&#x786E;&#x4F4D;&#x7F6E;&#x3002; 1find /usr/local/lib/ -type f -name &quot;cv2*.so&quot; &#x8FD9;&#x91CC;&#x7684;&#x8DEF;&#x5F84;&#x8981;&#x6CE8;&#x610F;&#x4E0B;&#xFF0C;&#x4E0A;&#x9762;&#x8F93;&#x51FA;&#x4EC0;&#x4E48;&#x8DEF;&#x5F84;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x4EC0;&#x4E48;&#x8DEF;&#x5F84; 123456############ Python 2 ############cd ~/.virtualenvs/facecourse-py2/lib/python2.7/site-packagesln -s /usr/local/lib/python2.7/site-packages/cv2.so cv2.so############ Python 3 ############cd ~/.virtualenvs/facecourse-py3/lib/python3.6/site-packagesln -s /usr/local/lib/python3.6/site-packages/cv2.so cv2.so &#x4E0D;&#x62A5;&#x9519;&#xFF0C;&#x5C31;&#x5B89;&#x88C5;&#x5B8C;&#x6210; &#x7B2C;&#x516D;&#x6B65;&#xFF1A;&#x6D4B;&#x8BD5;OpenCV3&#x6B65;&#x9AA4;6.1&#xFF1A;&#x6D4B;&#x8BD5;Python&#x4EE3;&#x7801;&#x8FDB;&#x5165;Python&#x865A;&#x62DF;&#x73AF;&#x5883;&#xFF0C;&#x5F53;&#x7136;&#x6700;&#x597D;&#x5148;&#x8FDB;&#x5165;root&#x73AF;&#x5883; 123456su root############ Python 2 ############workon facecourse-py2# &#x6216;############ Python 3 ############workon facecourse-py3 12345678# &#x6253;&#x5F00;python&#xFF08;&#x5728;&#x7EC8;&#x7AEF;&#x4E0A;&#x8FD0;&#x884C;&#x6B64;&#x547D;&#x4EE4;&#xFF09;python# &#x5BFC;&#x5165;cv2&#x5305;&#xFF08;&#x5728;python&#x4E2D;&#x8FD0;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#xFF09;import cv2print cv2.__version__# &#x5982;&#x679C;OpenCV3&#x5B89;&#x88C5;&#x6B63;&#x786E;&#xFF0C;# &#x4E0A;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x5E94;&#x8BE5;&#x8F93;&#x51FA;3.3.1# &#x6309;CTRL + D&#x9000;&#x51FA;ipython &#x5982;&#x679C;&#x6CA1;&#x6709;&#x8F93;&#x51FA;&#x4E0A;&#x9762;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5C31;&#x53EA;&#x80FD;&#x6309;&#x4E0B;&#x9762;&#x7684;&#x6267;&#x884C;&#xFF0C;&#x5F53;&#x7136;&#x4F1A;&#x9EBB;&#x70E6;&#x70B9;&#xFF1A; 1234567su root# &#x8FDB;&#x5165;&#x5230;&#x6B65;&#x9AA4;5.4&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4EE5;&#x540E;&#x6267;&#x884C;&#x4EE3;&#x7801;&#x4E5F;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;cd ~/.virtualenvs/cv/lib/python2.7/site-packages/# &#x6267;&#x884C;pythonimport cv2print cv2.__version__ &#x8FD9;&#x6B65;&#x9AA4;&#x771F;&#x7684;&#x6709;&#x70B9;&#x957F;&#x2026; &#x535A;&#x4E3B;&#x6709;&#x4E00;&#x4E2A;&#x73B0;&#x6210;&#x7684;&#x955C;&#x50CF;&#xFF0C;&#x7F51;&#x76D8;&#x94FE;&#x63A5;&#xFF1A; &#x94FE;&#x63A5;&#xFF1A;https://pan.baidu.com/s/1Kc57rozsS78dhBtwYtQNtQ&#x63D0;&#x53D6;&#x7801;&#xFF1A;wbaw document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <tags>
        <tag>图像处理</tag>
        <tag>树莓派</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构：希尔排序]]></title>
    <url>%2FPerkyRookie%2F8ae67b8f%2F</url>
    <content type="text"><![CDATA[&#x524D;&#x8A00; &#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x662F;Donald Shell&#x4E8E;1959&#x5E74;&#x63D0;&#x51FA;&#x6765;&#x7684;&#x4E00;&#x79CD;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x5B83;&#x662F;&#x7B2C;&#x4E00;&#x6279;&#x7A81;&#x7834;$O(n^2)$&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x7B97;&#x6CD5;&#x4E4B;&#x4E00;&#x3002;&#x5927;&#x8BDD;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5BF9;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x7684;&#x8BB2;&#x89E3;&#xFF0C;&#x6211;&#x770B;&#x5F97;&#x4E00;&#x77E5;&#x534A;&#x89E3;&#x7684;&#xFF0C;&#x4E4B;&#x540E;&#x7F51;&#x4E0A;&#x627E;&#x4E86;&#x4E0B;&#x8D44;&#x6599;&#xFF0C;&#x53D1;&#x73B0;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x5BF9;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x7684;&#x8BB2;&#x89E3;&#x975E;&#x5E38;&#x4E0D;&#x9519;&#xFF0C;&#x7279;&#x5728;&#x6B64;&#x6574;&#x7406;&#x4E00;&#x6CE2;&#x3002; &#x539F;&#x7406;&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x662F;&#x57FA;&#x4E8E;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x7684;&#x4EE5;&#x4E0B;&#x4E24;&#x70B9;&#x6027;&#x8D28;&#x800C;&#x63D0;&#x51FA;&#x6539;&#x8FDB;&#x65B9;&#x6CD5;&#x7684;&#xFF1A; &#x63D2;&#x5165;&#x6392;&#x5E8F;&#x5728;&#x5BF9;&#x51E0;&#x4E4E;&#x5DF2;&#x7ECF;&#x6392;&#x597D;&#x5E8F;&#x7684;&#x6570;&#x636E;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x6548;&#x7387;&#x9AD8;&#xFF0C;&#x5373;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x7EBF;&#x6027;&#x6392;&#x5E8F;&#x7684;&#x6548;&#x7387; &#x4F46;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x662F;&#x4F4E;&#x6548;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x6BCF;&#x6B21;&#x53EA;&#x80FD;&#x5C06;&#x6570;&#x636E;&#x79FB;&#x52A8;&#x4E00;&#x4F4D; &#x5148;&#x4E0A;&#x4E2A;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x7684;&#x52A8;&#x56FE;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x4F60;&#x4EEC;&#x770B;&#x4E0D;&#x770B;&#x5F97;&#x61C2;&#xFF0C;&#x53CD;&#x6B63;&#x6211;&#x4E0D;&#x662F;&#x5F88;&#x61C2;&#x2026;&#x2026; &#x8BF4;&#x8BF4;&#x6211;&#x7684;&#x4E2A;&#x4EBA;&#x7406;&#x89E3;&#xFF1A; &#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x7684;&#x5347;&#x7EA7;&#xFF0C;&#x539F;&#x7406;&#x5C31;&#x662F;&#x5148;&#x5C06;&#x6574;&#x4E2A;&#x5F85;&#x6392;&#x5E8F;&#x5217;&#x6309;&#x7167;&#x67D0;&#x4E2A;&#x589E;&#x91CF;&#xFF08;&#x4E5F;&#x79F0;&#x6B65;&#x957F;&#xFF09;&#x5206;&#x5272;&#x6210;&#x82E5;&#x5E72;&#x4E2A;&#x5B50;&#x5E8F;&#x5217;&#x5206;&#x522B;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x5408;&#x5E76;&#xFF0C;&#x4E4B;&#x540E;&#x4F9D;&#x6B21;&#x7F29;&#x5C0F;&#x589E;&#x91CF;&#x5927;&#x5C0F;&#x5728;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x5F53;&#x589E;&#x91CF;&#x8DB3;&#x591F;&#x5C0F;&#xFF08;&#x901A;&#x5E38;&#x4E3A;1&#xFF09;&#x65F6;&#xFF0C;&#x518D;&#x5BF9;&#x5168;&#x4F53;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#xFF0C;&#x800C;&#x6B64;&#x65F6;&#x9700;&#x6392;&#x5E8F;&#x7684;&#x6570;&#x636E;&#x51E0;&#x4E4E;&#x662F;&#x5DF2;&#x6392;&#x597D;&#x7684;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x8F83;&#x5FEB;&#x3002; &#x5F53;&#x7136;&#x5982;&#x679C;&#x4F60;&#x89C9;&#x5F97;&#x6587;&#x5B57;&#x6BD4;&#x8F83;&#x4E4F;&#x5473;&#x5C31;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x8FD9;&#x4E9B;&#x4F8B;&#x5B50;&#x5427; &#x4F8B;&#x5982;&#xFF0C;&#x5047;&#x8BBE;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x7EC4;&#x6570;[9 1 5 8 3 7 4 6 2]&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5148;&#x4EE5;&#x6B65;&#x957F;&#x4E3A;4&#x8FDB;&#x884C;&#x5206;&#x5272;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#xFF1A; 1239 1 5 83 7 4 6 2 &#x7136;&#x540E;&#x6211;&#x4EEC;&#x5BF9;&#x6BCF;&#x5217;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF08;&#x6CE8;&#x610F;&#x6BCF;&#x5217;&#x54E6;&#xFF09;&#xFF1A; 1232 1 4 63 7 5 89 &#x5C06;&#x4E0A;&#x8FF0;&#x56DB;&#x884C;&#x6570;&#x5B57;&#xFF0C;&#x4F9D;&#x5E8F;&#x5408;&#x5E76;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#xFF1A;[ 2 1 4 6 3 7 5 8 9 ]&#x3002;&#x6B64;&#x65F6;2&#x5DF2;&#x7ECF;&#x5F80;&#x524D;&#x79FB;&#xFF0C;&#x800C;8&#x3001;9&#x5DF2;&#x7ECF;&#x5728;&#x540E;&#x4E24;&#x4F4D;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4EE5;2&#x4E3A;&#x6B65;&#x957F;&#x8FDB;&#x884C;&#x5206;&#x5272;&#xFF1A; 123452 14 63 75 89 &#x7EE7;&#x7EED;&#x6392;&#x5E8F;&#xFF1A; 123452 13 64 75 89 &#x5408;&#x5E76;&#x5F97;&#x5230;&#xFF3B; 2 1 3 6 4 7 5 8 9&#xFF3D;&#xFF0C;&#x6B64;&#x65F6;&#x5E8F;&#x5217;&#x5DF2;&#x7ECF;&#x57FA;&#x672C;&#x6709;&#x5E8F;&#xFF0C;&#x9700;&#x4EA4;&#x6362;&#x6570;&#x636E;&#x7684;&#x60C5;&#x51B5;&#x5927;&#x4E3A;&#x51CF;&#x5C11;&#xFF0C;&#x8FD9;&#x65F6;&#x6574;&#x5217;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x6548;&#x7387;&#x5C31;&#x975E;&#x5E38;&#x9AD8;&#x3002; &#x6700;&#x7EC8;&#x5B8C;&#x6210;&#x6392;&#x5E8F;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6B65;&#x957F;&#x4E3A;1&#x65F6;&#xFF0C;&#x5F97;&#x5230;&#x6700;&#x7EC8;&#x5E8F;&#x5217;&#x4E3A;&#xFF1A;1 2 3 4 5 6 7 8 9&#x3002; &#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF08;C&#xFF09;12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;stdio.h&gt;#define MAXSIZE 100 //&#x7528;&#x4E8E;&#x8981;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x5927;&#x503C; typedef struct //&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x987A;&#x5E8F;&#x8868;&#x7ED3;&#x6784; { int r[MAXSIZE+1]; //&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x8981;&#x6392;&#x5E8F;&#x6570;&#x7EC4;&#xFF0C;r[0]&#x7528;&#x4F5C;&#x54E8;&#x5175;&#x6216;&#x8005;&#x4E34;&#x65F6;&#x53D8;&#x91CF; int length; //&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x987A;&#x5E8F;&#x8868;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6; }SqList;void ShellSort(SqList *L){ int i,j; int gap=L-&gt;length; //&#x83B7;&#x53D6;&#x6570;&#x7EC4;&#x957F;&#x5EA6; for(gap/=2;gap&gt;=1;gap/=2) //&#x6B65;&#x957F; for(i=gap+1; i&lt;=L-&gt;length; i++) //&#x4ECE;&#x7B2C;gap+1&#x4E2A;&#x5143;&#x7D20;&#x5F00;&#x59CB;&#xFF0C;&#x56E0;&#x4E3A;r[0]&#x88AB;&#x5F53;&#x505A;&#x4E34;&#x65F6;&#x53D8;&#x91CF; if(L-&gt;r[i] &lt; L-&gt;r[i-gap]) //&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E0E;&#x81EA;&#x5DF1;&#x7EC4;&#x5185;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F; { L-&gt;r[0]=L-&gt;r[i]; //&#x628A;&#x8981;&#x4EA4;&#x6362;&#x7684;&#x6570;&#x636E;&#x6682;&#x5B58;&#x7684;L-&gt;r[0]&#x4E2D; for(j=i-gap; j&gt;0&amp;&amp;L-&gt;r[j] &gt; L-&gt;r[0]; j-=gap) L-&gt;r[j+gap] = L-&gt;r[j]; //&#x8BB0;&#x5F55;&#x540E;&#x79FB;&#xFF0C;&#x67E5;&#x627E;&#x63D2;&#x5165;&#x4F4D;&#x7F6E; L-&gt;r[j+gap]=L-&gt;r[0]; //&#x63D2;&#x5165; }} int main(){ int i=0; int array[] = {39,80,76,41,13,29,50,78,30,11,100,7,41,86}; SqList L; L.length = sizeof(array)/sizeof(array[0]); //&#x83B7;&#x53D6;&#x6570;&#x7EC4;&#x957F;&#x5EA6; for(i=0;i&lt;L.length;i++) { L.r[i+1]=array[i]; //&#x628A;&#x6570;&#x7EC4;&#x5B58;&#x5165;&#x987A;&#x5E8F;&#x8868;&#x7ED3;&#x6784; } ShellSort(&amp;L); //&#x8F93;&#x51FA;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x6570;&#x7EC4; for(i=0;i&lt;L.length;i++) { printf(&quot;%d &quot;,L.r[i+1]); } return 0;} &#x53EF;&#x80FD;&#x6709;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#x7565;&#x96BE;&#x61C2;&#xFF0C;&#x8FD9;&#x91CC;&#x89E3;&#x91CA;&#x4E0B;&#xFF1A; &#x7B2C;15&#x884C;&#xFF1A;&#x8FD9;&#x91CC;&#x7684;&#x6B65;&#x957F;&#x91C7;&#x7528;$\frac {n} {2}$,&#x6700;&#x7EC8;&#x5224;&#x65AD;&#x6761;&#x4EF6;&#x4E3A;gap&gt;=1,&#x8FD9;&#x91CC;&#x4E0D;&#x7BA1;&#x4F60;&#x6570;&#x7EC4;&#x521D;&#x59CB;&#x957F;&#x5EA6;&#x4E3A;&#x591A;&#x5C11;&#xFF0C;&#x9664;&#x5230;&#x6700;&#x540E;&#x5747;&#x4F1A;&#x7B49;&#x4E8E;1&#xFF0C;&#x800C;&#x7B49;&#x4E8E;1&#x65F6;&#xFF0C;&#x5C31;&#x662F;&#x6267;&#x884C;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x5FAA;&#x73AF;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4E5F;&#x5C31;&#x662F;&#x6240;&#x6709;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x3002;&#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x5199;&#x6210;gap&gt;0&#x3002; &#x7B2C;16&#x884C;&#xFF1A;&#x5728;&#x524D;&#x9762;&#x5B9A;&#x4E49;&#x987A;&#x5E8F;&#x8868;&#x7ED3;&#x6784;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x52A0;&#x591A;&#x4E86;&#x4E00;&#x4F4D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x628A;r[0]&#x5F53;&#x505A;&#x4EA4;&#x6362;&#x6570;&#x636E;&#x65F6;&#x7684;&#x4E34;&#x65F6;&#x53D8;&#x91CF;&#x3002; &#x7B2C;20~23&#x884C;&#xFF1A;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;&#x5FAA;&#x73AF;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x62FF;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#x7684;&#x4E00;&#x5217;&#x8FDB;&#x884C;&#x8BB2;&#x89E3;&#xFF08;9 3 2&#xFF09;&#xFF1A; &#x5F53;$i=5$&#x65F6;&#xFF0C;9&#x548C;3&#x8FDB;&#x884C;&#x4E86;&#x4E00;&#x6B21;&#x4EA4;&#x6362;&#xFF0C;&#x53D8;&#x4E3A;&#xFF08;3 9 2&#xFF09;(&#x4F4D;&#x7F6E;&#x4E3A;1 5 9&#xFF09;&#xFF0C;&#x4E4B;&#x540E;&#x5728;$i=9$&#x65F6;$(&#x6B64;&#x65F6;r[0]=r[i]=2)$&#xFF0C;&#x505A;&#x51FA;&#x7684;&#x4EA4;&#x6362;&#x5982;&#x4E0A;&#x56FE;&#x6240;&#x793A;&#xFF08;&#x56FE;&#x7565;&#x5DEE;&#x2026;)&#xFF0C;&#x5206;&#x4E3A;&#x4E09;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A;$(gap=4)$ &#x7B2C;&#x4E00;&#x6B21;&#x8FDB;&#x5165;&#x5FAA;&#x73AF;$j=i-gap=5,r[j]=r[5]=9&gt;r[0]$&#xFF0C;&#x6267;&#x884C;23&#x884C;&#x5F97;$r[j+gap]=r[9]=r[j]=9$&#xFF0C;&#x6B64;&#x65F6;&#x8BE5;&#x5217;&#x6570;&#x503C;&#x53D8;&#x4E3A;(3 9 9)&#xFF1B; &#x7EE7;&#x7EED;&#x7B2C;&#x4E8C;&#x6B21;&#x5FAA;&#x73AF;$j=j-gap=1,r[j]=r[1]=3&gt;r[0]$&#xFF0C;&#x540C;&#x6837;&#x6267;&#x884C;&#x5FAA;&#x73AF;$r[j+gap]=r[5]=r[j]=3$&#xFF0C;&#x6B64;&#x65F6;&#x53D8;&#x4E3A;&#xFF08;3 3 9&#xFF09;&#xFF1B; &#x8DF3;&#x51FA;&#x5FAA;&#x73AF;(&#x6CE8;&#x610F;&#xFF1A;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x65F6;&#x591A;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x6B21;$j-=gap=-3&#x200B;$)&#xFF0C;&#x6267;&#x884C;$r[j+gap]=r[-3+4]=r[1]=r[0]=2&#x200B;$&#xFF0C;&#x6700;&#x7EC8;&#x53D8;&#x4E3A;(2 3 9)&#x3002; &#x6B65;&#x957F;&#xFF08;&#x589E;&#x91CF;&#xFF09;&#x9009;&#x62E9;&#x6B65;&#x957F;&#x7684;&#x9009;&#x53D6;&#x975E;&#x5E38;&#x5173;&#x952E;&#xFF0C;&#x4F46;&#x662F;&#x6B65;&#x957F;&#x7684;&#x9009;&#x62E9;&#x6CA1;&#x6709;&#x7EDF;&#x4E00;&#x89C4;&#x5B9A;&#xFF0C;&#x4E5F;&#x6CA1;&#x7EDD;&#x5BF9;&#x7684;&#x89C4;&#x5F8B;&#x3002;&#x53EA;&#x8981;&#x6EE1;&#x8DB3;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6B65;&#x957F;&#x4E3A;1&#x5373;&#x53EF;&#x3002;Donald Shell&#x6700;&#x521D;&#x5EFA;&#x8BAE;&#x6B65;&#x957F;&#x9009;&#x62E9;&#x4E3A;$\frac {n} {2}$,&#x867D;&#x7136;&#x8FD9;&#x6837;&#x53BB;&#x53EF;&#x4EE5;&#x6BD4;$O(n^2)$&#x7C7B;&#x7684;&#x7B97;&#x6CD5;&#x66F4;&#x597D;&#xFF0C;&#x4F46;&#x4ECD;&#x7136;&#x6709;&#x51CF;&#x5C11;&#x5E73;&#x5747;&#x65F6;&#x95F4;&#x548C;&#x6700;&#x5DEE;&#x65F6;&#x95F4;&#x7684;&#x4F59;&#x5730;&#x3002;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x7ED9;&#x51FA;&#x7684;&#x90E8;&#x5206;&#x6B65;&#x957F;&#x4E0E;&#x6700;&#x574F;&#x60C5;&#x51B5;&#x4E0B;&#x590D;&#x6742;&#x5EA6;&#x6709;&#xFF1A; &#x5DF2;&#x77E5;&#x7684;&#x6700;&#x597D;&#x6B65;&#x957F;&#x5E8F;&#x5217;&#x662F;&#x7531;Sedgewick&#x63D0;&#x51FA;&#x7684;(1, 5, 19, 41, 109,&#x2026;)&#xFF0C;&#x8BE5;&#x5E8F;&#x5217;&#x7684;&#x9879;&#x6765;&#x81EA;$9\times4^i-9\times2^i+1$&#x548C;$2^{i+2}\times(2^{i+2}-3)+1$&#x8FD9;&#x4E24;&#x4E2A;&#x7B97;&#x5F0F;&#x3002;&#x8FD9;&#x9879;&#x7814;&#x7A76;&#x4E5F;&#x8868;&#x660E;&#x201C;&#x6BD4;&#x8F83;&#x5728;&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x4E2D;&#x662F;&#x6700;&#x4E3B;&#x8981;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4EA4;&#x6362;&#x3002;&#x201D;&#x7528;&#x8FD9;&#x6837;&#x6B65;&#x957F;&#x5E8F;&#x5217;&#x7684;&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x6BD4;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x8981;&#x5FEB;&#xFF0C;&#x751A;&#x81F3;&#x5728;&#x5C0F;&#x6570;&#x7EC4;&#x4E2D;&#x6BD4;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x548C;&#x5806;&#x6392;&#x5E8F;&#xFF08;&#x540E;&#x7EED;&#x535A;&#x5BA2;&#x6574;&#x7406;&#xFF09;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x6D89;&#x53CA;&#x5927;&#x91CF;&#x6570;&#x636E;&#x65F6;&#x5E0C;&#x5C14;&#x6392;&#x5E8F;&#x8FD8;&#x662F;&#x6BD4;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x6162;&#x3002; document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <tags>
        <tag>C</tag>
        <tag>排序算法</tag>
      </tags>
  </entry>
</search>
